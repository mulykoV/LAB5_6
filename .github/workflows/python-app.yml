name: Python app deploy on AWS by GitHub Actions v1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  main_job:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      # Set up Python
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest junit-xml
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Lint with flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Run tests
      - name: Run tests
        run: |
          python3 -m unittest LAB5_6_test
        env:
          CI: true

      # Setup Terraform
      - name: Setup Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false

      # Terraform Format
      - name: Terraform Format
        run: terraform fmt -check
        working-directory: terraform
        continue-on-error: true

      # Terraform Init
      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init
        working-directory: terraform

      # Terraform Plan
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform plan -no-color -input=false -refresh=true
        working-directory: terraform

      # Terraform Apply
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -input=false -auto-approve
        working-directory: terraform
